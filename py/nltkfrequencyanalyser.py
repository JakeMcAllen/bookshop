# -*- coding: utf-8 -*-
"""NLTKFrequencyAnalyser.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Yr50OfdqwSRnWwHs3YJAq3JqurV9SWTe
"""

# !pip install nltk

from nltk.corpus import stopwords
from nltk.tokenize import word_tokenize, sent_tokenize
import nltk
nltk.download('stopwords')
nltk.download("punkt")

stopWords = set(stopwords.words("english"))
words = word_tokenize(text)


text = """L'avvento dell'intelligenza artificiale (IA) ha rivoluzionato numerosi settori, dalla medicina all'industria automobilistica. Ma le sue radici affondano in un passato più remoto di quanto si possa immaginare. Uno dei primi esempi di come la macchina potesse assistere l'uomo nella risoluzione di problemi complessi risale alla Seconda Guerra Mondiale. La macchina Enigma, utilizzata dai nazisti per criptare le comunicazioni, rappresentava una delle sfide più ardue per gli alleati. La sua complessità, con milioni di possibili configurazioni, rendeva la decifrazione un'impresa titanica. Tuttavia, un gruppo di crittoanalisti, guidati dall'eccentrico Alan Turing, riuscì nell'impresa di costruire una macchina, chiamata Colossus, in grado di decifrare i messaggi nemici. Colossus, considerata il primo computer elettronico programmabile, era un'anteprima di ciò che sarebbe diventata l'IA. La sua capacità di eseguire calcoli complessi a una velocità inimmaginabile per l'epoca permise di abbattere il muro di cifratura nazista, accelerando così la fine della guerra. Oggi, le tecniche di apprendimento automatico, un sottocampo dell'IA, sono utilizzate per affrontare problemi simili, ma su scala molto più vasta. Gli algoritmi di machine learning sono in grado di individuare pattern complessi in enormi quantità di dati, una capacità che si rivela fondamentale in settori come la finanza, la sicurezza informatica e la ricerca scientifica. Tuttavia, mentre Colossus era progettata per un compito specifico, l'IA moderna è molto più versatile. Le reti neurali artificiali, ispirate al funzionamento del cervello umano, sono in grado di apprendere da esempi e generalizzare a nuovi dati. Questa capacità ha aperto le porte a una miriade di applicazioni, dalla traduzione automatica alla generazione di testi creativi. È interessante notare come l'obiettivo iniziale di decifrare un codice segreto si sia evoluto in una disciplina che mira a imitare l'intelligenza umana. L'eredità di Alan Turing e di Colossus continua a ispirare i ricercatori di oggi, che lavorano per sviluppare macchine sempre più intelligenti e in grado di risolvere problemi sempre più complessi."""
summary = ''




def getsentenceValue():
  sentenceValue = dict()
  for sentence in sent_tokenize(text):
    for word, freq in freqTable.items():
      if word in sentence.lower():
        if sentence in sentenceValue: sentenceValue[sentence] += freq
        else: sentenceValue[sentence] = freq
  return sentenceValue

def getSumValues():
  sumValues = 0
  for sentence in sentenceValue:
    sumValues += sentenceValue[sentence]

  average = int(sumValues / len(sentenceValue))
  return average





freqTable = dict()
for word in words:
  word = word.lower()
  if word in stopWords: continue
  if word in freqTable: freqTable[word] += 1
  else: freqTable[word] = 1

# print(stopWords)

sentenceValue = getsentenceValue()
average = getSumValues()

print(freqTable)
print(sentenceValue)
print(average)


for sentence in sent_tokenize(text):
  print(sentenceValue[sentence])
  if (sentence in sentenceValue) and (sentenceValue[sentence] > (1.2 * average)):
    summary += " " + sentence


print(summary)